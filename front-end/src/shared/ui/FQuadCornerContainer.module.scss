@use '@app/values.scss';

$quad-size: 10px;
$line-length: 30px;
$corner-offset: calc(-0.5 * $quad-size);

.wrapper {
  min-width: calc($quad-size + $line-length * 2);
  min-height: calc($quad-size + $line-length * 2);
  padding: $quad-size;
  position: relative; 
  --color: #{values.$line-color};
}

@mixin corner {
  position: absolute;
  box-sizing: border-box;
  width: $quad-size;
  height: $quad-size;
  color: var(--color);
  border: 1px solid currentColor;
}

.lt-corner {
  @include corner();
  left: $corner-offset;
  top: $corner-offset;
}

.rt-corner {
  @include corner();
  right: $corner-offset;
  top: $corner-offset;
}

.lb-corner {
  @include corner();
  left: $corner-offset;
  bottom: $corner-offset;
}

.rb-corner {
  @include corner();
  right: $corner-offset;
  bottom: $corner-offset;
}

@mixin corner-line($orientation) {
  color: var(--color);
  border-color: currentColor;
  position: absolute; 
  @if $orientation == 'horizontal' {
    left: calc($quad-size / 2);
    width: calc(100% - $quad-size);
    height: 0;

    &::before {
      content: '';
      position: absolute;
      left: 0;
      width: $line-length;
      border-bottom: 1px solid currentColor;
    }

    &::after {
      content: '';
      position: absolute;
      right: 0;
      width: $line-length;
      border-bottom: 1px solid currentColor;
    }
  } @else {
    top: calc($quad-size / 2);
    width: 0;
    height: calc(100% - $quad-size);

    &::before {
      content: '';
      position: absolute;
      top: 0;
      height: $line-length;
      border-right: 1px solid currentColor;
    }

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      height: $line-length;
      border-right: 1px solid currentColor;
    }
  }
}

.t-line {
  @include corner-line('horizontal');
  top: 0;
}

.b-line {
  @include corner-line('horizontal');
  bottom: 0;
}

.l-line {
  @include corner-line('vertical');
  left: 0;
}

.r-line {
  @include corner-line('vertical');
  right: 0;
}
